<simulation xmds-version="2">
  <name> chi3_imag </name>
  <author>Heitor da Silva</author>
  <description>
    This code calculates the ground state of the 2D NLSE up to the chi3 regime.
    The procedure is carried out in imaginary time while re-normalising each timestep.
    The current version returns four outputs: the total energy as a function of t,
    the density as a function of the radial coordinate r, the normalization as a function
    of t and, the imaginary and real components of the wavefunction as function of r and t.
    Here we use the Hankel-transform which taking advantage of the radial symmetry of the
    problem. Therefore, the 2D problem becomes 1D from the numerical point of view.
  </description>

<features>
    <benchmark />
    <auto_vectorise />
    <validation kind="run-time" />
    <arguments>
      <argument name="psiM" type="real" default_value="1.0"/>      
      <argument name="sigma" type="real" default_value="1.0"/>
      <argument name="g" type="real" default_value="1.0"/>
    </arguments>
</features>
  
  <geometry>
    <propagation_dimension> t </propagation_dimension>
    <transverse_dimensions>
      <dimension name="r" lattice="512" domain="(0,6)" transform="bessel" volume_prefactor="2*M_PI" />
    </transverse_dimensions>
  </geometry>

  <vector name="wavefunction" initial_basis="r" type="complex">
    <components> psi </components>
    <initialisation>
      <![CDATA[
         psi = (sqrt(psiM)/(sqrt(M_PI * pow(sigma,2))))*exp(-(r*r)/(2*pow(sigma,2))); //initial condition
      ]]>
    </initialisation>
  </vector>

  <computed_vector name="normalisation" dimensions="" type="real">
    <components> psiMnew  </components>
    <evaluation>
      <dependencies basis="r">wavefunction</dependencies>
      <![CDATA[
        // Calculate the current normalisation of the wave function.
        psiMnew = mod2(psi);
      ]]>
    </evaluation>
  </computed_vector>

  <computed_vector name="kin_energy" dimensions="" type="real">
    <components> en_kin </components>
    <evaluation>
      <dependencies basis="kr">wavefunction</dependencies>
      <![CDATA[
        // Calculate the potential energy.
        en_kin = 0.5*kr*kr*mod2(psi); //kinetic energy
      ]]>
    </evaluation>
  </computed_vector>

  <computed_vector name="pot_energy" dimensions="" type="real">
    <components> en_pot </components>
    <evaluation>
      <dependencies basis="r">wavefunction</dependencies>
      <![CDATA[
        // Calculate the potential energy.
        en_pot = -0.5*mod2(psi)*mod2(psi); //energy of interaction for the 2-level case up to chi3
      ]]>
    </evaluation>
  </computed_vector>


<sequence>
    <filter>
        <dependencies>normalisation wavefunction</dependencies>
      <![CDATA[
        psi *= sqrt(psiM/psiMnew);
      ]]>
    </filter>

      <integrate algorithm="RK4" interval="30" steps="1000000">
      <samples> 500 500 500 500 </samples>
      <filters where="step end">
        <filter>
          <dependencies>wavefunction normalisation</dependencies>
          <![CDATA[
            // Correct normalisation of the wavefunction
            psi *= sqrt(psiM/psiMnew);
          ]]>
        </filter>
      </filters>
  <operators>

        <operator kind="ip">
          <operator_names> Tr </operator_names>
          <![CDATA[
            Tr = -0.5*kr*kr;
          ]]>
        </operator>

        <integration_vectors>
          wavefunction
        </integration_vectors> 
        <![CDATA[
          dpsi_dt = Tr[psi]+mod2(psi)*psi;
        ]]>
      </operators>
    </integrate>
  </sequence>

  <output format="hdf5">
      <sampling_group initial_sample="yes">
        <moments>energyt</moments>
        <dependencies>kin_energy pot_energy</dependencies>
        <![CDATA[
          energyt = en_kin + en_pot;
        ]]>
      </sampling_group>
    <sampling_group basis="r" initial_sample="yes">
        <moments>density</moments>
        <dependencies>wavefunction</dependencies>
        <![CDATA[
          density = mod2(psi);
        ]]>
      </sampling_group>
      <sampling_group basis="r(0)" initial_sample="yes">
        <moments>norm</moments>
        <dependencies>wavefunction</dependencies>
        <![CDATA[
          norm = mod2(psi);
        ]]>
      </sampling_group>
      <sampling_group initial_sample="yes" basis="r">
        <dependencies> wavefunction </dependencies>
        <moments> psireal psiimag </moments>
        <![CDATA[
          psireal = Re(psi);
          psiimag = Im(psi);
      ]]>
       </sampling_group>
  </output>
</simulation>
